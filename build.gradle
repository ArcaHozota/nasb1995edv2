/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.11'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'app.preach.gospel'
version = '1.5'
description = 'nasb1995edv2'
java.sourceCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/');
        url = uri('https://repository.apache.org/content/groups/staging/')
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.boot:spring-boot-starter-parent:3.2.11'
    }
}

ext.strutsVersion = '7.0.0-M9'
ext.commonsLangVersion = '3.16.0'

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-freemarker
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jetty
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation 'org.jetbrains:annotations:26.0.1'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation "org.apache.commons:commons-lang3:${commonsLangVersion}"
    // https://mvnrepository.com/artifact/org.apache.struts/struts2-core
    implementation("org.apache.struts:struts2-core:${strutsVersion}") {
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }
    // https://mvnrepository.com/artifact/org.apache.struts/struts2-convention-plugin
    implementation "org.apache.struts:struts2-convention-plugin:${strutsVersion}"
    // https://mvnrepository.com/artifact/org.apache.struts/struts2-spring-plugin
    implementation "org.apache.struts:struts2-spring-plugin:${strutsVersion}"
    // https://mvnrepository.com/artifact/org.apache.struts/struts2-json-plugin
    implementation "org.apache.struts:struts2-json-plugin:${strutsVersion}"
    // https://mvnrepository.com/artifact/org.jdbi/jdbi3-core
    implementation 'org.jdbi:jdbi3-core:3.47.0'
    // https://mvnrepository.com/artifact/org.jdbi/jdbi3-sqlobject
    implementation 'org.jdbi:jdbi3-sqlobject:3.47.0'
    // https://mvnrepository.com/artifact/org.jdbi/jdbi3-spring5
	implementation 'org.jdbi:jdbi3-spring5:3.47.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation 'org.apache.commons:commons-collections4:4.4'
    // https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2
    implementation 'com.alibaba.fastjson2:fastjson2:2.0.53'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql'
    // https://mvnrepository.com/artifact/org.eclipse/yasson
    implementation 'org.eclipse:yasson:3.0.4'
    // https://mvnrepository.com/artifact/com.atilika.kuromoji/kuromoji-ipadic
    implementation 'com.atilika.kuromoji:kuromoji-ipadic:0.9.0'
    // https://mvnrepository.com/artifact/jakarta.servlet.jsp/jakarta.servlet.jsp-api
    implementation 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:4.0.0'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    compileOnly 'org.springframework.boot:spring-boot-devtools'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    annotationProcessor 'org.projectlombok:lombok'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

task updateVersion {
    doLast {
        def version = 'git describe --tags --abbrev=0'.execute().text.trim()
        def files = fileTree(dir: '.', include: '**/*.java')

        files.each { file ->
            def content = file.text.replaceAll(/@version .*/, "@version ${version}")
            file.write(content)
        }
    }
}

build.dependsOn updateVersion